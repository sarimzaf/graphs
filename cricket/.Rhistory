#          label = "Top 6 run scorers",
#          colour='black', size = 1.4, family = "franklin") +
scale_color_manual(values = colors,
breaks = c("Babar Azam")) +
scale_size_manual(values = size, guide = "none") +
scale_alpha(guide = "none") +
scale_x_continuous(limits = c(0, inns_ceiling),
expand = c(0, 0),
breaks = seq(0, inns_ceiling, 25)) +
scale_y_continuous(limits = c(0, runs_ceiling + 300),
expand = c(0, 0),
breaks = seq(0, runs_ceiling, 500)) +
theme_minimal(base_size = 12, base_family = "franklin") +
labs(
title = "Career T20i runs by innings (top 250 scorers)",
caption = "Created by: Sarim Zafar \n Data source: cricsheet.com") +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
plot.background = element_blank(),
plot.title = element_text(size = 12, hjust = 0.5, family = "franklin", face = "bold",
margin = margin(b = 2)),
plot.caption = element_text(size = 8, family = "franklin", margin = margin(t = 15)),
plot.caption.position = "panel",
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_line(linetype = "dotted", color = "black", linewidth = 0.25),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(size = 0.5),
axis.line.x = element_line(size = 0.5),
axis.text = element_text(size = 9.5),
axis.title = element_blank(),
legend.position = "none",
)
ggsave("t20i_runs_inns.png",
p, width = 10, height = 7, dpi = 400)
p <- ggplot(runs) +
geom_line(aes(x = cum_inns, y = cum_runs, color = striker,
size = striker, alpha = career_runs)
) +
geom_hline(yintercept = highest_runs, size = 0.6, linetype = "dashed") +
geom_point(data = last_points,
aes(x = career_inns, y = career_runs, color = striker),
size = 1.7) +
annotate(geom="text",
x = highest_scorer$career_inns, y = highest_runs + (0.025*highest_runs),
label = paste0(highest_scorer$striker, ": ", highest_runs),
colour='black', size = 4, family = "franklin") +
geom_text(data = last_points %>% filter(striker != highest_scorer$striker),
aes(x = career_inns, y = career_runs, label = striker),
size = 3, position = position_dodge(width = 1), vjust = -0.9, hjust = 1) +
geom_rect(aes(xmin=inns_ceiling-20, xmax=inns_ceiling-18,
ymin=(0.028*runs_ceiling), ymax=(0.034*runs_ceiling)),
fill="#5e4ed5", alpha=0.8) +
geom_text(data = last_points %>% slice(1) %>% mutate(striker = "Top 6 run scorers"),
aes(x = highest_inns-18, y = (0.03*runs_ceiling), label = striker),
size = 3.5, position = position_dodge(width = 1), vjust = 0.1, hjust = -0.9,
family = "franklin") +
# annotate(geom="text",
#          x = max(last_points$career_inns)+1.8, y = (0.033*runs_ceiling),
#          label = "Top 6 run scorers",
#          colour='black', size = 1.4, family = "franklin") +
scale_color_manual(values = colors,
breaks = c("Babar Azam")) +
scale_size_manual(values = size, guide = "none") +
scale_alpha(guide = "none") +
scale_x_continuous(limits = c(0, inns_ceiling),
expand = c(0, 0),
breaks = seq(0, inns_ceiling, 25)) +
scale_y_continuous(limits = c(0, runs_ceiling + 300),
expand = c(0, 0),
breaks = seq(0, runs_ceiling, 500)) +
theme_minimal(base_size = 12, base_family = "franklin") +
labs(
title = "Career T20i runs by innings (top 250 scorers)",
caption = "Created by: Sarim Zafar \n Data source: cricsheet.com") +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
plot.background = element_blank(),
plot.title = element_text(size = 12, hjust = 0.5, family = "franklin", face = "bold",
margin = margin(b = 2)),
plot.caption = element_text(size = 8, family = "franklin", margin = margin(t = 15), color = "gray35"),
plot.caption.position = "panel",
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_line(linetype = "dotted", color = "black", linewidth = 0.25),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(size = 0.5),
axis.line.x = element_line(size = 0.5),
axis.text = element_text(size = 9.5),
axis.title = element_blank(),
legend.position = "none",
)
ggsave("t20i_runs_inns.png",
p, width = 10, height = 7, dpi = 400)
![](C:/Users/SZafar/Documents/Github/graphs/cricket/t20i_runs_inns.png)
![]("C:/Users/SZafar/Documents/Github/graphs/cricket/t20i_runs_inns.png")
![runs](C:/Users/SZafar/Documents/Github/graphs/cricket/t20i_runs_inns.png)
![runs](C:/Users/SZafar/Documents/Github/graphs/cricket/t20i_runs_inns.png)
![runs](C:/Users/SZafar/Documents/Github/graphs/cricket/t20i_runs_inns.png)
![runs](C:/Users/SZafar/Documents/Github/graphs/cricket/t20i_runs_inns.png)
![runs](C:/Users/SZafar/Documents/Github/graphs/cricket/t20i_runs_inns.png)
![runs](C:/Users/SZafar/Documents/Github/graphs/cricket/t20i_runs_inns.png)
![runs](C:/Users/SZafar/Documents/Github/graphs/cricket/t20i_runs_inns.png)
getwd()
setwd("C:/Users/SZafar/Documents/Github/graphs/cricket")
![runs](t20i_runs_inns.png)
![runs](t20i_runs_inns.png)
getwd()
![runs](t20i_runs_inns.png)
![runs]("t20i_runs_inns.png")
knitr::include_graphics("t20i_runs_inns.png")
p <- ggplot(runs) +
geom_line(aes(x = cum_inns, y = cum_runs, color = striker,
size = striker, alpha = career_runs)
) +
geom_hline(yintercept = highest_runs, size = 0.6, linetype = "dashed") +
geom_point(data = last_points,
aes(x = career_inns, y = career_runs, color = striker),
size = 1.7) +
annotate(geom="text",
x = highest_scorer$career_inns, y = highest_runs + (0.025*highest_runs),
label = paste0(highest_scorer$striker, ": ", highest_runs),
colour='black', size = 4, family = "franklin") +
geom_text(data = last_points %>% filter(striker != highest_scorer$striker),
aes(x = career_inns, y = career_runs, label = striker),
size = 3, position = position_dodge(width = 1), vjust = -0.9, hjust = 1) +
geom_rect(aes(xmin=inns_ceiling-20, xmax=inns_ceiling-18,
ymin=(0.028*runs_ceiling), ymax=(0.034*runs_ceiling)),
fill="#5e4ed5", alpha=0.8) +
geom_text(data = last_points %>% slice(1) %>% mutate(striker = "Top 6 run scorers"),
aes(x = highest_inns-18, y = (0.03*runs_ceiling), label = striker),
size = 3.5, position = position_dodge(width = 1), vjust = 0.1, hjust = -0.9,
family = "franklin") +
# annotate(geom="text",
#          x = max(last_points$career_inns)+1.8, y = (0.033*runs_ceiling),
#          label = "Top 6 run scorers",
#          colour='black', size = 1.4, family = "franklin") +
scale_color_manual(values = colors,
breaks = c("Babar Azam")) +
scale_size_manual(values = size, guide = "none") +
scale_alpha(guide = "none") +
scale_x_continuous(limits = c(0, inns_ceiling),
expand = c(0, 0),
breaks = seq(0, inns_ceiling, 25)) +
scale_y_continuous(limits = c(0, runs_ceiling + 300),
expand = c(0, 0),
breaks = seq(0, runs_ceiling, 500)) +
theme_minimal(base_size = 12, base_family = "franklin") +
labs(
title = "Career T20i runs by innings (top 250 scorers)",
caption = "Created by: Sarim Zafar \n Data source: cricsheet.com") +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
plot.background = element_blank(),
plot.title = element_text(size = 12, hjust = 0.5, family = "franklin", face = "bold",
margin = margin(b = 2)),
plot.caption = element_text(size = 8, family = "franklin", margin = margin(t = 15), color = "gray35"),
plot.caption.position = "panel",
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_line(linetype = "dotted", color = "black", linewidth = 0.25),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(size = 0.5),
axis.line.x = element_line(size = 0.5),
axis.text = element_text(size = 9.5),
axis.title = element_blank(),
legend.position = "none",
)
ggsave("t20i_runs_inns.png",
p, width = 10, height = 7, dpi = 400,
bg = "white")
knitr::include_graphics("t20i_runs_inns.png")
knitr::include_graphics("t20i_runs_inns.png")
p <- ggplot(runs) +
geom_line(aes(x = cum_inns, y = cum_runs, color = striker,
size = striker, alpha = career_runs)
) +
geom_hline(yintercept = highest_runs, size = 0.6, linetype = "dashed") +
geom_point(data = last_points,
aes(x = career_inns, y = career_runs, color = striker),
size = 1.7) +
annotate(geom="text",
x = highest_scorer$career_inns, y = highest_runs + (0.025*highest_runs),
label = paste0(highest_scorer$striker, ": ", highest_runs),
colour='black', size = 4, family = "franklin") +
geom_text(data = last_points %>% filter(striker != highest_scorer$striker),
aes(x = career_inns, y = career_runs, label = striker),
size = 3, position = position_dodge(width = 1), vjust = -0.9, hjust = 1) +
geom_rect(aes(xmin=inns_ceiling-20, xmax=inns_ceiling-18,
ymin=(0.028*runs_ceiling), ymax=(0.034*runs_ceiling)),
fill="#5e4ed5", alpha=0.8) +
geom_text(data = last_points %>% slice(1) %>% mutate(striker = "Top 6 run scorers"),
aes(x = highest_inns-18, y = (0.03*runs_ceiling), label = striker),
size = 3.5, position = position_dodge(width = 1), vjust = 0.1, hjust = -0.9,
family = "franklin") +
# annotate(geom="text",
#          x = max(last_points$career_inns)+1.8, y = (0.033*runs_ceiling),
#          label = "Top 6 run scorers",
#          colour='black', size = 1.4, family = "franklin") +
scale_color_manual(values = colors,
breaks = c("Babar Azam")) +
scale_size_manual(values = size, guide = "none") +
scale_alpha(guide = "none") +
scale_x_continuous(limits = c(0, inns_ceiling),
expand = c(0, 0),
breaks = seq(0, inns_ceiling, 25)) +
scale_y_continuous(limits = c(0, runs_ceiling + 300),
expand = c(0, 0),
breaks = seq(0, runs_ceiling, 500)) +
theme_minimal(base_size = 12, base_family = "franklin") +
labs(
title = "Career T20i runs by innings (top 250 scorers)",
caption = "Created by: Sarim Zafar \n Data source: cricsheet.com") +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
plot.background = element_blank(),
plot.title = element_text(size = 12, hjust = 0.5, family = "franklin", face = "bold",
margin = margin(b = 2)),
plot.caption = element_text(size = 8, family = "franklin", margin = margin(t = 15), color = "gray35"),
plot.caption.position = "panel",
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_line(linetype = "dotted", color = "black", linewidth = 0.25),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.ticks.y = element_blank(),
axis.ticks.x = element_line(size = 0.5),
axis.line.x = element_line(size = 0.5),
axis.text = element_text(size = 9.5),
axis.title = element_blank(),
legend.position = "none",
)
ggsave("t20i_runs_inns.png",
p, width = 10, height = 7, dpi = 400,
bg = "white")
knitr::include_graphics("t20i_runs_inns.png")
knitr::include_graphics("t20i_runs_inns.png")
setwd("C:/Users/SZafar/Documents/Github/test/scraping/congress")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, dplyr, ggplot2, rvest, stringr, lubridate, glue, magick, RCurl, memoise, ggimage, extrafont, janitor, magrittr, urltools, scales, xml2, ggrepel, ggpattern)
setwd("C:/Users/SZafar/Documents/Github/test/scraping/congress")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, rvest, stringr, lubridate, RCurl, memoise, extrafont, janitor, magrittr, urltools, scales, ggrepel)
url <- "https://datawrapper.de/cdn-cgi/image/quality=85,width=1920,f=auto,fit=cover/https://kirby.datawrapper.de/media/pages/blog/age-of-us-senators-charts/bad7176f59-1740123118/full-200204_w_senate.png"
response=GET(url)
cat(content(response))
sd
setwd("C:/Users/SZafar/Documents/Github/graphs/politcians/senate")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, rvest, stringr, lubridate, RCurl, memoise, extrafont, janitor, magrittr, urltools, scales, ggrepel)
![](original.png "Original image from datawrapper.de")
![Chart showing generation spread for each year of the senate](original.png "Original image from datawrapper.de")
getwd()
getwd()
![Chart showing generation spread for each year of the senate](original.png)
url <- "https://en.wikipedia.org/wiki/List_of_former_United_States_senators"
webpage <- read_html(url)
table <- webpage %>%
html_nodes('.wikitable') %>%
html_table()
table[1]
senators <- table[1]
url <- "https://en.wikipedia.org/wiki/List_of_former_United_States_senators"
webpage <- read_html(url)
table <- webpage %>%
html_nodes('.wikitable') %>%
html_table()
senators <- as.data.frame(table[[1]]) %>%
clean_names()
View(senators)
url <- "https://en.wikipedia.org/wiki/List_of_current_United_States_senators#List_of_senators"
webpage <- read_html(url)
table <- webpage %>%
html_nodes('.wikitable') %>%
html_table()
table[1]
table[5]
url <- "https://en.wikipedia.org/wiki/List_of_former_United_States_senators"
webpage <- read_html(url)
table <- webpage %>%
html_nodes('.wikitable') %>%
html_table()
former <- as.data.frame(table[[1]]) %>%
clean_names()
url <- "https://en.wikipedia.org/wiki/List_of_current_United_States_senators#List_of_senators"
webpage <- read_html(url)
table <- webpage %>%
html_nodes('.wikitable') %>%
html_table()
current <- as.data.frame(table[[5]]) %>%
clean_names()
View(former)
View(current)
former2 <- former %>%
mutate(all_years = str_extract_all(years, "\\d{4}")) %>%
unnest_wider(all_years, names_sep = "")
View(former2)
former2 <- former %>%
mutate(term_years = str_extract_all(years, "\\d{4}")) %>%
unnest_wider(term_years, names_sep = "")
former2 <- former %>%
mutate(term_years = str_extract_all(years, "\\d{4}")) %>%
unnest_wider(term_years, names_sep = "") %>%
mutate(birth_year = str_extract_all(lifespan, "\\d{4}"))
former2 <- former %>%
mutate(term_years = str_extract_all(years, "\\d{4}")) %>%
unnest_wider(term_years, names_sep = "") %>%
mutate(birth_year = str_extract(lifespan, "\\d{4}"))
former2 <- former %>%
mutate(term_years = str_extract_all(years, "\\d{4}")) %>%
unnest_wider(term_years, names_sep = "") %>%
mutate(birth_year = str_extract(lifespan, "\\d{4}")) %>%
filter(term_year1 >= 1920)
former2 <- former %>%
mutate(term_year = str_extract_all(years, "\\d{4}")) %>%
unnest_wider(term_year, names_sep = "") %>%
mutate(birth_year = str_extract(lifespan, "\\d{4}")) %>%
filter(term_year1 >= 1920)
# https://en.wikiversity.org/wiki/Generations (probable)
former_gen <- former2 %>%
mutate(generation = case_when(
birth_year >= 1843 & birth_year <= 1859 ~ "Progressive",
birth_year >= 1860 & birth_year <= 1882 ~ "Missionary",
birth_year >= 1883 & birth_year <= 1900 ~ "Lost",
birth_year >= 1901 & birth_year <= 1924 ~ "G.I.",
birth_year >= 1925 & birth_year <= 1945 ~ "Silent",
birth_year >= 1946 & birth_year <= 1964 ~ "Baby Boomer",
birth_year >= 1965 & birth_year <= 1980 ~ "Gen X",
birth_year >= 1981 & birth_year <= 1996 ~ "Millennial",
birth_year >= 1997 & birth_year <= 2009 ~ "Gen Z",
TRUE ~ NA
))
# https://en.wikiversity.org/wiki/Generations (probable)
former_gen <- former2 %>%
mutate(generation = case_when(
birth_year >= 1822 & birth_year <= 1842 ~ "Gilded",
birth_year >= 1843 & birth_year <= 1859 ~ "Progressive",
birth_year >= 1860 & birth_year <= 1882 ~ "Missionary",
birth_year >= 1883 & birth_year <= 1900 ~ "Lost",
birth_year >= 1901 & birth_year <= 1924 ~ "G.I.",
birth_year >= 1925 & birth_year <= 1945 ~ "Silent",
birth_year >= 1946 & birth_year <= 1964 ~ "Baby Boomer",
birth_year >= 1965 & birth_year <= 1980 ~ "Gen X",
birth_year >= 1981 & birth_year <= 1996 ~ "Millennial",
birth_year >= 1997 & birth_year <= 2009 ~ "Gen Z",
TRUE ~ NA
))
former2 <- former %>%
mutate(term_year = str_extract_all(years, "\\d{4}")) %>%
unnest_wider(term_year, names_sep = "") %>%
mutate(birth_year = str_extract(lifespan, "\\d{4}")) %>%
pivot_longer(
cols = starts_with("term_year"),
names_to = "year_index",
values_to = "term_year"
) %>%
select(-year_index) %>%
filter(!is.na(term_year)) %>%
filter(term_year >= 1920)
View(former2)
# https://en.wikiversity.org/wiki/Generations (probable)
former_gen <- former2 %>%
mutate(generation = case_when(
birth_year >= 1822 & birth_year <= 1842 ~ "Gilded",
birth_year >= 1843 & birth_year <= 1859 ~ "Progressive",
birth_year >= 1860 & birth_year <= 1882 ~ "Missionary",
birth_year >= 1883 & birth_year <= 1900 ~ "Lost",
birth_year >= 1901 & birth_year <= 1924 ~ "G.I.",
birth_year >= 1925 & birth_year <= 1945 ~ "Silent",
birth_year >= 1946 & birth_year <= 1964 ~ "Baby Boomer",
birth_year >= 1965 & birth_year <= 1980 ~ "Gen X",
birth_year >= 1981 & birth_year <= 1996 ~ "Millennial",
birth_year >= 1997 & birth_year <= 2009 ~ "Gen Z",
TRUE ~ NA
))
View(former_gen)
former_gen %>%
group_by(term_year) %>%
summarise(count = n())
max(former_gen$term_year)
library(dplyr)
library(tidyr)
library(stringr)
library(purrr)
df <- data.frame(
senator = c("Joseph Carter Abbott", "James Abdnor", "Hazel Abel", "Alva B. Adams"),
years = c("1868–1871", "1981–1987", "1954", "1923–1924|1933–1941"),
class = c(2, 3, 2, 3),
stringsAsFactors = FALSE
)
# Extract all 4-digit years
df_expanded <- df %>%
mutate(all_years = str_extract_all(years, "\\d{4}")) %>%
unnest_longer(all_years) %>%
mutate(all_years = as.integer(all_years))
# Group and fill in missing years per senator
filled_data <- df_expanded %>%
group_by(senator, years, class) %>%
arrange(all_years, .by_group = TRUE) %>%
summarise(
year = {
yrs <- sort(all_years)
if (length(yrs) == 1) {
seq(yrs[1], 2025)  # assume serving until 2025
} else {
unlist(map2(yrs[-length(yrs)], yrs[-1], ~ seq(.x, .y)))
}
},
.groups = "drop"
)
View(filled_data)
library(dplyr)
library(tidyr)
library(stringr)
library(purrr)
df <- data.frame(
senator = c("Joseph Carter Abbott", "James Abdnor", "Hazel Abel", "Alva B. Adams", "Lamar Alexander"),
years = c("1868–1871", "1981–1987", "1954", "1923–1924 1933–1941", "2003–2021"),
class = c(2, 3, 2, 3, 2),
stringsAsFactors = FALSE
)
# Extract all 4-digit years
df_long_years <- df %>%
mutate(year_list = str_extract_all(years, "\\d{4}")) %>%
rowwise() %>%
mutate(
year_seq = list({
y <- as.integer(unlist(year_list))
year_ranges <- split(y, ceiling(seq_along(y) / 2))  # group into pairs
unlist(map(year_ranges, function(pair) {
if (length(pair) == 1) {
seq(pair[1], 2025)  # only one year: extend to 2025
} else {
seq(pair[1], pair[2])  # full term
}
}))
})
) %>%
select(senator, class, years, year_seq) %>%
unnest(year_seq) %>%
rename(year = year_seq) %>%
arrange(senator, year)
library(dplyr)
library(tidyr)
library(stringr)
library(purrr)
# Sample dataframe
df <- data.frame(
senator = c("Joseph Carter Abbott", "James Abdnor", "Hazel Abel", "Alva B. Adams", "Lamar Alexander"),
years = c("1868–1871", "1981–1987", "1954", "1923–1924 1933–1941", "2003–2021"),
class = c(2, 3, 2, 3, 2),
stringsAsFactors = FALSE
)
# Extract and expand years
df_long_years <- df %>%
mutate(raw_years = str_extract_all(years, "\\d{4}")) %>%
rowwise() %>%
mutate(
expanded_years = list({
year_nums <- as.integer(unlist(raw_years))
year_pairs <- split(year_nums, ceiling(seq_along(year_nums) / 2))
unlist(map(year_pairs, function(pair) {
if (length(pair) == 1) {
seq(pair[1], 2025)
} else {
seq(pair[1], pair[2])
}
}))
})
) %>%
unnest(expanded_years) %>%
ungroup() %>%
rename(year = expanded_years)
rm(list = ls())          # Clears all user-defined objects
gc()
library(dplyr)
library(tidyr)
library(stringr)
library(purrr)
# Sample dataframe
df <- data.frame(
senator = c("Joseph Carter Abbott", "James Abdnor", "Hazel Abel", "Alva B. Adams", "Lamar Alexander"),
years = c("1868–1871", "1981–1987", "1954", "1923–1924 1933–1941", "2003–2021"),
class = c(2, 3, 2, 3, 2),
stringsAsFactors = FALSE
)
# Extract and expand years
df_long_years <- df %>%
mutate(raw_years = str_extract_all(years, "\\d{4}")) %>%
rowwise() %>%
mutate(
expanded_years = list({
year_nums <- as.integer(unlist(raw_years))
year_pairs <- split(year_nums, ceiling(seq_along(year_nums) / 2))
unlist(map(year_pairs, function(pair) {
if (length(pair) == 1) {
seq(pair[1], 2025)
} else {
seq(pair[1], pair[2])
}
}))
})
) %>%
unnest(expanded_years) %>%
ungroup() %>%
rename(year = expanded_years)
